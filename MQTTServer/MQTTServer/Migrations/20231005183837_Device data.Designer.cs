// <auto-generated />
using System;
using System.Collections.Generic;
using MQTTServer.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MQTTServer.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    [Migration("20231005183837_Device data")]
    partial class Devicedata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MQTTServer.Models.Device", b =>
                {
                    b.Property<string>("DeviceID")
                        .HasColumnType("text");

                    b.Property<int>("ConnectionCode")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("SubscribedTopics")
                        .HasColumnType("text[]");

                    b.Property<DateTime[]>("Times")
                        .HasColumnType("timestamp with time zone[]");

                    b.Property<double[]>("Values")
                        .HasColumnType("double precision[]");

                    b.HasKey("DeviceID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("MQTTServer.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<List<string>>("ConnectedDevicesID")
                        .HasColumnType("text[]");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("SubscribedTopics")
                        .HasColumnType("text[]");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
